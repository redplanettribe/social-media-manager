basePath: /
definitions:
  errors.APIError:
    properties:
      code:
        type: string
      details: {}
      message:
        type: string
      status:
        type: integer
    type: object
  handlers.addTimeSlotRequest:
    properties:
      day_of_week:
        description: time.Weekday
        type: integer
      hour:
        type: integer
      minute:
        type: integer
    type: object
  handlers.addUserRequest:
    properties:
      email:
        type: string
    type: object
  handlers.assignRoleRequest:
    properties:
      role_id:
        type: string
      user_id:
        type: string
    type: object
  handlers.authenticationRequest:
    properties:
      params:
        additionalProperties: true
        type: object
    type: object
  handlers.createPostRequest:
    properties:
      is_idea:
        type: boolean
      scheduled_at:
        type: string
      text_content:
        type: string
      title:
        type: string
      type:
        type: string
    type: object
  handlers.createProjectRequest:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  handlers.createUserRequest:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  handlers.loginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  handlers.moveInQueueRequest:
    properties:
      current_index:
        type: integer
      new_index:
        type: integer
    type: object
  handlers.schedulePostRequest:
    properties:
      scheduled_at:
        type: string
    type: object
  media.DownloadMetaData:
    properties:
      added_by:
        type: string
      alt_text:
        type: string
      created_at:
        type: string
      filename:
        type: string
      format:
        type: string
      height:
        type: integer
      id:
        type: string
      length:
        type: integer
      media_type:
        $ref: '#/definitions/media.MediaType'
      post_id:
        type: string
      size:
        description: in bytes
        type: integer
      url:
        type: string
      url_thumbnail:
        type: string
      width:
        type: integer
    type: object
  media.MediaType:
    enum:
    - image
    - video
    - short_video
    - document
    type: string
    x-enum-varnames:
    - MediaTypeImage
    - MediaTypeVideo
    - MediaTypeShortVideo
    - MediaTypeDocument
  post.Platform:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  post.Post:
    properties:
      created_at:
        type: string
      created_by:
        type: string
      id:
        type: string
      is_idea:
        type: boolean
      project_id:
        type: string
      scheduled_at:
        type: string
      status:
        type: string
      text_content:
        type: string
      title:
        type: string
      type:
        $ref: '#/definitions/post.PostType'
      updated_at:
        type: string
    type: object
  post.PostResponse:
    properties:
      created_at:
        type: string
      created_by:
        type: string
      id:
        type: string
      is_idea:
        type: boolean
      linked_platforms:
        items:
          $ref: '#/definitions/post.Platform'
        type: array
      project_id:
        type: string
      scheduled_at:
        type: string
      status:
        type: string
      text_content:
        type: string
      title:
        type: string
      type:
        $ref: '#/definitions/post.PostType'
      updated_at:
        type: string
    type: object
  post.PostType:
    enum:
    - text
    - mix_media
    - image
    - multi_image
    - video
    - short_video
    - document
    - carousel
    type: string
    x-enum-varnames:
    - PostTypeText
    - PostTypeMixMedia
    - PostTypeImage
    - PostTypeMultiImage
    - PostTypeVideo
    - PostTypeShortVideo
    - PostTypeDocument
    - PostTypeCarousel
  post.PublishPost:
    properties:
      created_at:
        type: string
      created_by:
        type: string
      id:
        type: string
      is_idea:
        type: boolean
      platform:
        type: string
      profile_tags:
        items:
          type: string
        type: array
      project_id:
        type: string
      publish_status:
        type: string
      scheduled_at:
        type: string
      secrets:
        description: Additional fields
        type: string
      status:
        type: string
      text_content:
        type: string
      title:
        type: string
      type:
        $ref: '#/definitions/post.PostType'
      updated_at:
        type: string
    type: object
  project.Project:
    properties:
      created_at:
        type: string
      created_by:
        type: string
      description:
        type: string
      id:
        type: string
      idea_queue:
        items:
          type: string
        type: array
      name:
        type: string
      post_queue:
        items:
          type: string
        type: array
      updated_at:
        type: string
    type: object
  project.SocialPlatform:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  project.TimeSlot:
    properties:
      day_of_week:
        description: 0 = Sunday, 1 = Monday, etc.
        example: 1
        type: integer
      hour:
        type: integer
      minute:
        type: integer
    type: object
  project.UserPlatformInfo:
    properties:
      authTTL:
        type: string
      isAuthenticated:
        type: boolean
    type: object
  project.WeeklyPostSchedule:
    properties:
      slots:
        items:
          $ref: '#/definitions/project.TimeSlot'
        type: array
      time_margin:
        description: 5 minutes in nanoseconds
        example: 300000000
        type: integer
    type: object
  publisher.Platform:
    properties:
      id:
        $ref: '#/definitions/publisher.PlatformID'
      name:
        type: string
    type: object
  publisher.PlatformID:
    enum:
    - facebook
    - x
    - linkedin
    - instagram
    type: string
    x-enum-varnames:
    - Facebook
    - X
    - LinkedIn
    - Instagram
  publisher.PublishPostInfo:
    properties:
      media:
        items:
          $ref: '#/definitions/media.DownloadMetaData'
        type: array
      post:
        $ref: '#/definitions/post.PublishPost'
    type: object
  session.Session:
    properties:
      createdAt:
        type: string
      deviceFingerprint:
        type: string
      expiresAt:
        type: string
      id:
        type: string
      updatedAt:
        type: string
      userID:
        type: string
    type: object
  user.AppRole:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  user.LoginResponse:
    properties:
      session:
        $ref: '#/definitions/session.Session'
      user:
        $ref: '#/definitions/user.UserResponse'
    type: object
  user.UserResponse:
    properties:
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      roles:
        items:
          $ref: '#/definitions/user.AppRole'
        type: array
      updated_at:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is the API server for OpenCM
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: OpenCM API
  version: "1.0"
paths:
  /media/{project_id}/{post_id}:
    post:
      consumes:
      - multipart/form-data
      description: Upload media
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      - description: Post ID
        in: path
        name: post_id
        required: true
        type: string
      - description: File
        in: formData
        name: file
        required: true
        type: file
      - description: Alt text
        in: formData
        name: alt_text
        type: string
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/media.DownloadMetaData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.APIError'
      summary: Upload media
      tags:
      - media
  /media/{project_id}/{post_id}/{file_name}:
    delete:
      consumes:
      - application/json
      description: Delete media
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      - description: Post ID
        in: path
        name: post_id
        required: true
        type: string
      - description: File name
        in: path
        name: file_name
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.APIError'
      summary: Delete media
      tags:
      - media
  /media/{project_id}/{post_id}/{file_name}/meta:
    get:
      description: Get download metadata
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      - description: Post ID
        in: path
        name: post_id
        required: true
        type: string
      - description: File name
        in: path
        name: file_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/media.DownloadMetaData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.APIError'
      summary: Get download metadata
      tags:
      - media
  /media/{project_id}/{post_id}/{platform_id}/{file_name}/unlink:
    get:
      description: Get media file. This endpoint shouldn't be used. Use the frontend
        to get the media file directly from the bucket.
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      - description: Post ID
        in: path
        name: post_id
        required: true
        type: string
      - description: File name
        in: path
        name: file_name
        required: true
        type: string
      produces:
      - application/octet-stream
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.APIError'
      summary: Get media file
      tags:
      - media
  /media/{project_id}/{post_id}/{platform_id}/{media_id}:
    delete:
      consumes:
      - application/json
      description: Delink media from publish post
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      - description: Post ID
        in: path
        name: post_id
        required: true
        type: string
      - description: Platform ID
        in: path
        name: platform_id
        required: true
        type: string
      - description: Media ID
        in: path
        name: media_id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.APIError'
      summary: Delink media from publish post
      tags:
      - media
  /media/{project_id}/{post_id}/{platform_id}/{media_id}/link:
    post:
      consumes:
      - application/json
      description: Link media to publish post
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      - description: Post ID
        in: path
        name: post_id
        required: true
        type: string
      - description: Platform ID
        in: path
        name: platform_id
        required: true
        type: string
      - description: Media ID
        in: path
        name: media_id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.APIError'
      summary: Link media to publish post
      tags:
      - media
  /posts:
    get:
      consumes:
      - application/json
      description: Get available post types
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - ApiKeyAuth: []
      summary: Get available post types
      tags:
      - posts
  /posts/{project_id}:
    get:
      consumes:
      - application/json
      description: List all posts of a project by its id
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/post.Post'
            type: array
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/errors.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.APIError'
        "410":
          description: Project not found
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - ApiKeyAuth: []
      summary: List all posts of a project
      tags:
      - posts
  /posts/{project_id}/{post_id}:
    delete:
      consumes:
      - application/json
      description: Delete a post by its id. We might or might not want to implement
        pagination and filtering. For the time being, we will keep it simple.
      parameters:
      - description: Post ID
        in: path
        name: post_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No content
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/errors.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.APIError'
        "410":
          description: Post not found
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - ApiKeyAuth: []
      summary: Delete a post
      tags:
      - posts
    get:
      consumes:
      - application/json
      description: Get a post by its id
      parameters:
      - description: Post ID
        in: path
        name: post_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/post.PostResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/errors.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.APIError'
        "410":
          description: Post not found
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - ApiKeyAuth: []
      summary: Get a post by id
      tags:
      - posts
    patch:
      consumes:
      - application/json
      description: Update a post with the given title, text content, image links,
        video links, is idea and scheduled at
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      - description: Post ID
        in: path
        name: post_id
        required: true
        type: string
      - description: Post update request
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/handlers.createPostRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No content
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/errors.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.APIError'
        "410":
          description: Post not found
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - ApiKeyAuth: []
      summary: Update a post
      tags:
      - posts
  /posts/{project_id}/{post_id}/archive:
    patch:
      consumes:
      - application/json
      description: Archive a post by its id
      parameters:
      - description: Post ID
        in: path
        name: post_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No content
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/errors.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.APIError'
        "410":
          description: Post not found
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - ApiKeyAuth: []
      summary: Archive a post
      tags:
      - posts
  /posts/{project_id}/{post_id}/dequeue:
    patch:
      consumes:
      - application/json
      description: Remove a post from a project queue by its id
      parameters:
      - description: Post ID
        in: path
        name: post_id
        required: true
        type: string
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No content
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/errors.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.APIError'
        "410":
          description: Post not found
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - ApiKeyAuth: []
      summary: Remove a post from a project queue
      tags:
      - posts
  /posts/{project_id}/{post_id}/enqueue:
    patch:
      consumes:
      - application/json
      description: Add a post to a project queue by its id
      parameters:
      - description: Post ID
        in: path
        name: post_id
        required: true
        type: string
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No content
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/errors.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.APIError'
        "410":
          description: Post not found
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - ApiKeyAuth: []
      summary: Add a post to a project queue
      tags:
      - posts
  /posts/{project_id}/{post_id}/platforms/{platform_id}:
    delete:
      consumes:
      - application/json
      description: Remove a social media publisher platform from a post by its id
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      - description: Post ID
        in: path
        name: post_id
        required: true
        type: string
      - description: Platform ID
        in: path
        name: platform_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No content
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/errors.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.APIError'
        "410":
          description: Post not found
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - ApiKeyAuth: []
      summary: Remove a social media publisher platform from a post
      tags:
      - posts
    post:
      consumes:
      - application/json
      description: Add a social media publisher platform to a post by its id
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      - description: Post ID
        in: path
        name: post_id
        required: true
        type: string
      - description: Platform ID
        in: path
        name: platform_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No content
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/errors.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.APIError'
        "410":
          description: Post not found
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - ApiKeyAuth: []
      summary: Add a social media publisher platform to a post
      tags:
      - posts
  /posts/{project_id}/{post_id}/restore:
    patch:
      consumes:
      - application/json
      description: Restore a post by its id
      parameters:
      - description: Post ID
        in: path
        name: post_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No content
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/errors.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.APIError'
        "410":
          description: Post not found
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - ApiKeyAuth: []
      summary: Restore a post
      tags:
      - posts
  /posts/{project_id}/{post_id}/schedule:
    patch:
      consumes:
      - application/json
      description: Schedule a post by its id
      parameters:
      - description: Post ID
        in: path
        name: post_id
        required: true
        type: string
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      - description: Scheduled at
        in: body
        name: scheduled_at
        required: true
        schema:
          $ref: '#/definitions/handlers.schedulePostRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No content
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/errors.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.APIError'
        "410":
          description: Post not found
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - ApiKeyAuth: []
      summary: Schedule a post
      tags:
      - posts
  /posts/{project_id}/{post_id}/unschedule:
    patch:
      consumes:
      - application/json
      description: Unschedule a post by its id
      parameters:
      - description: Post ID
        in: path
        name: post_id
        required: true
        type: string
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No content
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/errors.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.APIError'
        "410":
          description: Post not found
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - ApiKeyAuth: []
      summary: Unschedule a post
      tags:
      - posts
  /posts/{project_id}/add:
    post:
      consumes:
      - application/json
      description: Create a new post with the given title, text content, image links,
        video links, is idea and scheduled at
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      - description: Post creation request
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/handlers.createPostRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/post.Post'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/errors.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.APIError'
        "409":
          description: Post already exists
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - ApiKeyAuth: []
      summary: Create a new post
      tags:
      - posts
  /posts/{project_id}/idea-queue/move:
    patch:
      consumes:
      - application/json
      description: Add a post to a project idea queue by its id
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No content
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/errors.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - ApiKeyAuth: []
      summary: Add a post to a project idea queue
      tags:
      - posts
  /posts/{project_id}/post-queue/move:
    patch:
      consumes:
      - application/json
      description: Move a post in the project queue by its current and new index
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      - description: Post ID
        in: path
        name: post_id
        required: true
        type: string
      - description: Move post request
        in: body
        name: move
        required: true
        schema:
          $ref: '#/definitions/handlers.moveInQueueRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No content
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/errors.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.APIError'
        "410":
          description: Post not found
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - ApiKeyAuth: []
      summary: Move a post in the project queue
      tags:
      - posts
  /posts/{project_id}/queue:
    get:
      consumes:
      - application/json
      description: Get all queued posts of a project by its id
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/post.Post'
            type: array
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/errors.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.APIError'
        "410":
          description: Project not found
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - ApiKeyAuth: []
      summary: Get all queued posts of a project
      tags:
      - posts
  /projects:
    get:
      consumes:
      - application/json
      description: List all projects that the user is a member of
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/project.Project'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - ApiKeyAuth: []
      summary: List all projects
      tags:
      - projects
    post:
      consumes:
      - application/json
      description: Create a new project with the given name and description
      parameters:
      - description: Project creation request
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/handlers.createProjectRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/project.Project'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/errors.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.APIError'
        "409":
          description: Project already exists
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - ApiKeyAuth: []
      summary: Create a new project
      tags:
      - projects
  /projects/{project_id}:
    delete:
      consumes:
      - application/json
      description: Delete a project with the given ID
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No content
          schema:
            type: string
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/errors.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.APIError'
        "410":
          description: Project not found
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - ApiKeyAuth: []
      summary: Delete a project
      tags:
      - projects
    get:
      consumes:
      - application/json
      description: Get a project by its ID
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/project.Project'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/errors.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.APIError'
        "410":
          description: Project not found
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - ApiKeyAuth: []
      summary: Get a project
      tags:
      - projects
    patch:
      consumes:
      - application/json
      description: Update a project with the given ID
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      - description: Project update request
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/handlers.createProjectRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/project.Project'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/errors.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.APIError'
        "410":
          description: Project not found
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - ApiKeyAuth: []
      summary: Update a project
      tags:
      - projects
  /projects/{project_id}/add-role/{user_id}/{role_id}:
    post:
      consumes:
      - application/json
      description: Add a role to a user in a project
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      - description: Role ID
        in: path
        name: role_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No content
          schema:
            type: string
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/errors.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.APIError'
        "410":
          description: Project not found
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - ApiKeyAuth: []
      summary: Add a role to a user
      tags:
      - projects
  /projects/{project_id}/add-time-slot:
    patch:
      consumes:
      - application/json
      description: Add a time slot to a project
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      - description: Time slot request
        in: body
        name: time_slot
        required: true
        schema:
          $ref: '#/definitions/handlers.addTimeSlotRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No content
          schema:
            type: string
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/errors.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.APIError'
        "410":
          description: Project not found
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - ApiKeyAuth: []
      summary: Add a time slot to a project
      tags:
      - projects
  /projects/{project_id}/add-user:
    post:
      consumes:
      - application/json
      description: Add a user to a project by their email
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      - description: User addition request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.addUserRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No content
          schema:
            type: string
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/errors.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.APIError'
        "409":
          description: User already exists
          schema:
            $ref: '#/definitions/errors.APIError'
        "410":
          description: Project not found
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - ApiKeyAuth: []
      summary: Add a user to a project
      tags:
      - projects
  /projects/{project_id}/default-user-platform-info/{platform_id}:
    get:
      consumes:
      - application/json
      description: Get the default user platform info for a project
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      - description: Platform ID
        in: path
        name: platform_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/project.UserPlatformInfo'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/errors.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.APIError'
        "410":
          description: Project not found
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - ApiKeyAuth: []
      summary: Get the default user platform info
      tags:
      - projects
  /projects/{project_id}/default-user/{user_id}:
    patch:
      consumes:
      - application/json
      description: Set the default user for a project
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No content
          schema:
            type: string
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/errors.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.APIError'
        "410":
          description: Project not found
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - ApiKeyAuth: []
      summary: Set the default user for a project
      tags:
      - projects
  /projects/{project_id}/disable-social-platform/{platform_id}:
    delete:
      consumes:
      - application/json
      description: Disable a social platform for a project
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      - description: Social Platform ID
        in: path
        name: social_platform_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No content
          schema:
            type: string
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/errors.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.APIError'
        "410":
          description: Project not found
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - ApiKeyAuth: []
      summary: Disable a social platform
      tags:
      - projects
  /projects/{project_id}/enable-social-platform/{platform_id}:
    post:
      consumes:
      - application/json
      description: Enable a social platform for a project
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      - description: Social Platform ID
        in: path
        name: social_platform_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No content
          schema:
            type: string
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/errors.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.APIError'
        "409":
          description: User already exists
          schema:
            $ref: '#/definitions/errors.APIError'
        "410":
          description: Project not found
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - ApiKeyAuth: []
      summary: Enable a social platform
      tags:
      - projects
  /projects/{project_id}/remove-role/{user_id}/{role_id}:
    delete:
      consumes:
      - application/json
      description: Remove a role from a user in a project
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      - description: Role ID
        in: path
        name: role_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No content
          schema:
            type: string
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/errors.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.APIError'
        "410":
          description: Project not found
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - ApiKeyAuth: []
      summary: Remove a role from a user
      tags:
      - projects
  /projects/{project_id}/remove-time-slot:
    patch:
      consumes:
      - application/json
      description: Remove a time slot from a project
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      - description: Time slot request
        in: body
        name: time_slot
        required: true
        schema:
          $ref: '#/definitions/handlers.addTimeSlotRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/errors.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.APIError'
        "410":
          description: Project not found
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - ApiKeyAuth: []
      summary: Remove a time slot from a project
      tags:
      - projects
  /projects/{project_id}/remove-user/{user_id}:
    delete:
      consumes:
      - application/json
      description: Remove a user from a project by their email
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No content
          schema:
            type: string
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/errors.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.APIError'
        "410":
          description: Project not found
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - ApiKeyAuth: []
      summary: Remove a user from a project
      tags:
      - projects
  /projects/{project_id}/schedule:
    get:
      consumes:
      - application/json
      description: Get the project schedule for a project
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/project.WeeklyPostSchedule'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/errors.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.APIError'
        "410":
          description: Project not found
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - ApiKeyAuth: []
      summary: Get the project schedule
      tags:
      - projects
  /projects/{project_id}/social-platforms:
    get:
      consumes:
      - application/json
      description: Get the social platforms enabled for a project
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/project.SocialPlatform'
            type: array
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/errors.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.APIError'
        "410":
          description: Project not found
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - ApiKeyAuth: []
      summary: Get enabled social platforms
      tags:
      - projects
  /projects/{project_id}/user-roles/{user_id}:
    get:
      consumes:
      - application/json
      description: Get the roles of a user in a project
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/errors.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.APIError'
        "410":
          description: Project not found
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - ApiKeyAuth: []
      summary: Get user roles
      tags:
      - projects
  /publishers:
    get:
      consumes:
      - application/json
      description: Get available social networks
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/publisher.Platform'
            type: array
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - ApiKeyAuth: []
      summary: Get available social networks
      tags:
      - publishers
  /publishers/{project_id}/{platform_id}/{user_id}/authenticate:
    post:
      consumes:
      - application/json
      description: Authenticate
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      - description: Platform ID
        in: path
        name: platform_id
        required: true
        type: string
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      - description: Authentication request
        in: body
        name: authentication
        required: true
        schema:
          $ref: '#/definitions/handlers.authenticationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - ApiKeyAuth: []
      summary: Authenticate
      tags:
      - publishers
  /publishers/{project_id}/{post_id}/{platform_id}:
    post:
      consumes:
      - application/json
      description: Publish post to social network
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      - description: Post ID
        in: path
        name: post_id
        required: true
        type: string
      - description: Social Network ID
        in: path
        name: social_network_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - ApiKeyAuth: []
      summary: Publish post to social network
      tags:
      - publishers
  /publishers/{project_id}/{post_id}/{platform_id}/{user_platform_id}/add-profile-tag:
    post:
      consumes:
      - application/json
      description: Add profile tag to post
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      - description: Post ID
        in: path
        name: post_id
        required: true
        type: string
      - description: Social Network ID
        in: path
        name: social_network_id
        required: true
        type: string
      - description: User Platform ID
        in: path
        name: user_platform_id
        required: true
        type: string
      - description: Tag
        in: path
        name: tag
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - ApiKeyAuth: []
      summary: Add profile tag to post
      tags:
      - publishers
  /publishers/{project_id}/{post_id}/{platform_id}/info:
    get:
      consumes:
      - application/json
      description: Get publish post info
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      - description: Post ID
        in: path
        name: post_id
        required: true
        type: string
      - description: Social Network ID
        in: path
        name: social_network_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/publisher.PublishPostInfo'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - ApiKeyAuth: []
      summary: Get publish post info
      tags:
      - publishers
  /publishers/{project_id}/{post_id}/{platform_id}/validate:
    get:
      consumes:
      - application/json
      description: Validate post for social network
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      - description: Post ID
        in: path
        name: post_id
        required: true
        type: string
      - description: Social Network ID
        in: path
        name: social_network_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - ApiKeyAuth: []
      summary: Validate post for social network
      tags:
      - publishers
  /publishers/{project_id}/{post_id}/validate:
    get:
      consumes:
      - application/json
      description: Validate post for all assigned social networks
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      - description: Post ID
        in: path
        name: post_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - ApiKeyAuth: []
      summary: Validate post for all assigned social networks
      tags:
      - publishers
  /users:
    post:
      consumes:
      - application/json
      description: Register a new user with username, password and email
      parameters:
      - description: User creation request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.createUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/user.UserResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/errors.APIError'
        "409":
          description: User already exists
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      summary: Register a new user
      tags:
      - users
  /users/login:
    post:
      consumes:
      - application/json
      description: Login with email and password
      parameters:
      - description: Login request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.loginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.LoginResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/errors.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      summary: Login
      tags:
      - users
  /users/logout:
    post:
      description: Logout the currently authenticated user
      responses:
        "200":
          description: OK
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - ApiKeyAuth: []
      summary: Logout
      tags:
      - users
  /users/me:
    get:
      consumes:
      - application/json
      description: Get information about the currently authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.UserResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - ApiKeyAuth: []
      summary: Get user information
      tags:
      - users
  /users/roles:
    delete:
      consumes:
      - application/json
      description: Remove an application role from a user
      parameters:
      - description: Remove role request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.assignRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - ApiKeyAuth: []
      summary: Remove role from user
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Get all application roles
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/user.AppRole'
            type: array
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - ApiKeyAuth: []
      summary: Get all roles
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Assign an application role to a user
      parameters:
      - description: Assign role request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.assignRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - ApiKeyAuth: []
      summary: Assign role to user
      tags:
      - users
schemes:
- http
- https
swagger: "2.0"
